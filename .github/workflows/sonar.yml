name: Sonar Continuous Integration & Publish NuGet Package

env:
  DOTNET_VERSION: '8.x'
  SONAR_ORG: '72943816s'
  SONAR_PROJECT: '72943816s_apibank'
  PACKAGE_NAME: 'Bank'
  PACKAGE_VERSION: '1.0.0'
  GITHUB_REPOSITORY: 'OWNER/REPO'

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  sonarqube:
    name: Sonarqube Analysis & Publish NuGet
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: cd Bank && dotnet restore 

      - name: Run tests with coverage
        run: dotnet test --collect:"XPlat Code Coverage;Format=opencover"

      - name: Install Sonar Scanner
        run: dotnet tool install -g dotnet-sonarscanner

      - name: Run SonarCloud scan
        run: |
          dotnet-sonarscanner begin /k:"${{ env.SONAR_PROJECT }}" /o:"${{ env.SONAR_ORG }}" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="*/*/*/coveragereport.opencover.xml" /d:sonar.qualitygate.wait=true
          dotnet build
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Pack NuGet package
        run: dotnet pack Bank/Bank.Domain/Bank.Domain.csproj --configuration Release --output .

      - name: Publish package to GitHub Packages
        run: dotnet nuget push *.nupkg --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" --api-key ${{ secrets.SONAR_TOKEN }} --skip-duplicate

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate release notes
        id: release_notes
        run: |
          echo "## Changelog" > RELEASE_NOTES.md
          git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --pretty=format:"- %s" >> RELEASE_NOTES.md

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body_path: "RELEASE_NOTES.md"
          token: ${{ secrets.SONAR_TOKEN }}
